{"ast":null,"code":"var _jsxFileName = \"/Users/hongseonghyeon/lab_readbook/2023ict/bprj/src/pages/Bookintro/index.jsx\",\n  _s = $RefreshSig$();\n//라우터의 /:id 값을 받아와야 한다.\n//330p.\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n// import dummy from '../public/books.json';\n\n// props 대신 라우터에서 받아야 한다.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Bookintro = () => {\n  _s();\n  // const blst = JSON.stringify(dummy);\n  // fetch의 url은 dotenv 처리해야 한다.\n\n  const [bookdata, setBookdata] = useState([]);\n  useEffect(() => {\n    const fetchdata = async () => {\n      try {\n        // axios 사용\n        const resp = await axios.get('http://localhost:8080/selectbook').catch(console.error);\n        setBookdata(resp.data); // 정상\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchdata();\n  }, []);\n  console.log(\"State: \", bookdata);\n  const param = useParams(); // 라우터의 파라미터를 받는다.\n  // 331p. 문자열을 숫자로 교체해야 한다.\n  // const bdata = blst[param.id];\n  const bdata = bookdata[param.id];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [bdata.title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB85C\\uADF8\\uC778\\uD574\\uC57C \\uCC45\\uC744 \\uC77D\\uC744\\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Bookintro, \"UMpzcsHUDx9fYLazHHPQVE+tjk8=\", false, function () {\n  return [useParams];\n});\n_c = Bookintro;\nexport default Bookintro;\nvar _c;\n$RefreshReg$(_c, \"Bookintro\");","map":{"version":3,"names":["useState","useEffect","useParams","axios","jsxDEV","_jsxDEV","Bookintro","_s","bookdata","setBookdata","fetchdata","resp","get","catch","console","error","data","e","log","param","bdata","id","children","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hongseonghyeon/lab_readbook/2023ict/bprj/src/pages/Bookintro/index.jsx"],"sourcesContent":["\n//라우터의 /:id 값을 받아와야 한다.\n//330p.\nimport { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n// import dummy from '../public/books.json';\n\n// props 대신 라우터에서 받아야 한다.\nconst Bookintro = () => {\n  // const blst = JSON.stringify(dummy);\n  // fetch의 url은 dotenv 처리해야 한다.\n\n  const [bookdata, setBookdata] = useState([]);\n\n  useEffect(() => {\n    const fetchdata = async () => {\n      try {\n        // axios 사용\n        const resp = await axios.get('http://localhost:8080/selectbook')\n          .catch(console.error)\n        setBookdata(resp.data) // 정상\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchdata();\n\n  }, [])\n\n  console.log(\"State: \", bookdata)\n  const param = useParams(); // 라우터의 파라미터를 받는다.\n  // 331p. 문자열을 숫자로 교체해야 한다.\n  // const bdata = blst[param.id];\n  const bdata = bookdata[param.id];\n\n  return (\n    <div>\n      <h1>{bdata.title} </h1>\n\n      <h2>Description</h2>\n      <p>로그인해야 책을 읽을수 있습니다.</p>\n    </div>\n  );\n};\n\nexport default Bookintro;\n"],"mappings":";;AACA;AACA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB;EACA;;EAEA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,IAAI,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,kCAAkC,CAAC,CAC7DC,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;QACvBN,WAAW,CAACE,IAAI,CAACK,IAAI,CAAC,EAAC;MACzB,CAAC,CAAC,OAAOC,CAAC,EAAE;QACVH,OAAO,CAACI,GAAG,CAACD,CAAC,CAAC;MAChB;IACF,CAAC;IACDP,SAAS,CAAC,CAAC;EAEb,CAAC,EAAE,EAAE,CAAC;EAENI,OAAO,CAACI,GAAG,CAAC,SAAS,EAAEV,QAAQ,CAAC;EAChC,MAAMW,KAAK,GAAGjB,SAAS,CAAC,CAAC,CAAC,CAAC;EAC3B;EACA;EACA,MAAMkB,KAAK,GAAGZ,QAAQ,CAACW,KAAK,CAACE,EAAE,CAAC;EAEhC,oBACEhB,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,GAAKF,KAAK,CAACG,KAAK,EAAC,GAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEvBtB,OAAA;MAAAiB,QAAA,EAAI;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBtB,OAAA;MAAAiB,QAAA,EAAG;IAAkB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV,CAAC;AAACpB,EAAA,CAnCID,SAAS;EAAA,QAsBCJ,SAAS;AAAA;AAAA0B,EAAA,GAtBnBtB,SAAS;AAqCf,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}